<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-24T22:00:25 EDT" name="Default suite" finished-at="2023-05-24T22:00:33 EDT" duration-ms="8491">
    <groups>
    </groups>
    <test started-at="2023-05-24T22:00:25 EDT" name="Default test" finished-at="2023-05-24T22:00:33 EDT" duration-ms="8491">
      <class name="tek.api.sqa.tests.GetAllAccountTest">
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.GetAllAccountTest@d2de489]" started-at="2023-05-24T22:00:25 EDT" name="setupApiTest" finished-at="2023-05-24T22:00:25 EDT" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
        <test-method signature="getAllAccountTest()[pri:0, instance:tek.api.sqa.tests.GetAllAccountTest@d2de489]" started-at="2023-05-24T22:00:25 EDT" name="getAllAccountTest" finished-at="2023-05-24T22:00:30 EDT" duration-ms="4954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllAccountTest -->
      </class> <!-- tek.api.sqa.tests.GetAllAccountTest -->
      <class name="tek.api.sqa.tests.TokenVerifyTest">
        <test-method signature="verifyValidToken()[pri:0, instance:tek.api.sqa.tests.TokenVerifyTest@2ad48653]" started-at="2023-05-24T22:00:31 EDT" name="verifyValidToken" finished-at="2023-05-24T22:00:32 EDT" duration-ms="722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidToken -->
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.TokenVerifyTest@2ad48653]" started-at="2023-05-24T22:00:31 EDT" name="setupApiTest" finished-at="2023-05-24T22:00:31 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
      </class> <!-- tek.api.sqa.tests.TokenVerifyTest -->
      <class name="tek.api.sqa.tests.SecurityTest">
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.SecurityTest@5167f57d]" started-at="2023-05-24T22:00:30 EDT" name="setupApiTest" finished-at="2023-05-24T22:00:30 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
        <test-method signature="testGenerateTokenValidUser()[pri:0, instance:tek.api.sqa.tests.SecurityTest@5167f57d]" started-at="2023-05-24T22:00:30 EDT" name="testGenerateTokenValidUser" finished-at="2023-05-24T22:00:31 EDT" duration-ms="432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateTokenValidUser -->
        <test-method signature="tokenWithInvalidDataTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tek.api.sqa.tests.SecurityTest@5167f57d]" started-at="2023-05-24T22:00:31 EDT" name="tokenWithInvalidDataTest" data-provider="invalidTokenData" finished-at="2023-05-24T22:00:31 EDT" duration-ms="352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WrongUser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tek_supervisor]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[User not found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tokenWithInvalidDataTest -->
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.SecurityTest@5167f57d]" started-at="2023-05-24T22:00:31 EDT" name="setupApiTest" finished-at="2023-05-24T22:00:31 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
        <test-method signature="tokenWithInvalidDataTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tek.api.sqa.tests.SecurityTest@5167f57d]" started-at="2023-05-24T22:00:31 EDT" name="tokenWithInvalidDataTest" data-provider="invalidTokenData" finished-at="2023-05-24T22:00:31 EDT" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[supervisor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[WrongPassword]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Password Not Matched]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tokenWithInvalidDataTest -->
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.SecurityTest@5167f57d]" started-at="2023-05-24T22:00:31 EDT" name="setupApiTest" finished-at="2023-05-24T22:00:31 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
      </class> <!-- tek.api.sqa.tests.SecurityTest -->
      <class name="tek.api.sqa.tests.GetAccountTest">
        <test-method signature="getAccountWithExistingId()[pri:0, instance:tek.api.sqa.tests.GetAccountTest@68746f22]" started-at="2023-05-24T22:00:32 EDT" name="getAccountWithExistingId" finished-at="2023-05-24T22:00:33 EDT" duration-ms="1056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAccountWithExistingId -->
        <test-method is-config="true" signature="setupApiTest()[pri:0, instance:tek.api.sqa.tests.GetAccountTest@68746f22]" started-at="2023-05-24T22:00:32 EDT" name="setupApiTest" finished-at="2023-05-24T22:00:32 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApiTest -->
      </class> <!-- tek.api.sqa.tests.GetAccountTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
